jobs:
  include:
    - os: linux
      dist: bionic
      name: "Test with Python 3.8.0 under Ubuntu 18.04 (Bionic Beaver)"
      env:
        - PYTHON_VERSION="3.8.0"
        - TOXENV="py38"
    - os: osx
      osx_image: xcode11.2
      name: "Test with Python 3.8.0 under macOS 10.14 (Mojave)"
      env:
        - PYTHON_VERSION="3.8.0"
        - TOXENV="py38"
    - stage: "Tests"
      language: generic
      os: linux
      dist: bionic
      name: "Test with Python 3.7.5 under Ubuntu 18.04 (Bionic Beaver)"
      env:
        - PYTHON_VERSION="3.7.5"
        - TOXENV="py37"
    - language: generic
      os: osx
      osx_image: xcode11.2
      name: "Test with Python 3.7.5 under macOS 10.14 (Mojave)"
      env:
        - PYTHON_VERSION="3.7.5"
        - TOXENV="py37"
    - language: generic
      os: linux
      dist: bionic
      name: "Test with Python 3.7.4 under Ubuntu 18.04 (Bionic Beaver)"
      env:
        - PYTHON_VERSION="3.7.4"
        - TOXENV="py37"
    - language: generic
      os: osx
      osx_image: xcode11.2
      name: "Test with Python 3.7.4 under macOS 10.14 (Mojave)"
      env:
        - PYTHON_VERSION="3.7.4"
        - TOXENV="py37"
    - language: generic
      os: linux
      dist: bionic
      name: "Test with Python 3.6.9 under Ubuntu 18.04 (Bionic Beaver)"
      env:
        - PYTHON_VERSION="3.6.9"
        - TOXENV="py36"
    - language: generic
      os: osx
      osx_image: xcode11.2
      name: "Test with Python 3.6.9 under macOS 10.14 (Mojave)"
      env:
        - PYTHON_VERSION="3.6.9"
        - TOXENV="py36"
    - language: generic
      os: linux
      dist: bionic
      name: "Test with Python 3.6.8 under Ubuntu 18.04 (Bionic Beaver)"
      env:
        - PYTHON_VERSION="3.6.8"
        - TOXENV="py36"
    - language: generic
      os: osx
      osx_image: xcode11.2
      name: "Test with Python 3.6.8 under macOS 10.14 (Mojave)"
      env:
        - PYTHON_VERSION="3.6.8"
        - TOXENV="py36"

matrix:
  fast_finish: true

install:
  - export PATH="${HOME}/miniconda/bin:${PATH}"
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; else wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - bash miniconda.sh -b -p ${HOME}/miniconda
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q -n test-environment python="${PYTHON_VERSION}"
  - source activate test-environment
  - python -VV
  - pip --version
  - pip install pylint coverage coveralls PyYAML pylint coverage coveralls codacy-coverage tox-current-env
  - pip install -e .

script:
  - pylint domain2idna
  - pylint tests
  - coverage run setup.py test
  - coverage xml
  - domain2idna -d аррӏе.com
  - domain2idna -f .travis/list_of_domain
  - domain2idna -f .travis/list_of_domain -o list_of_domain_converted
  - cat list_of_domain_converted

after_success:
  - python-codacy-coverage -r coverage.xml
  - coveralls

notifications:
  on_success: change
  on_failure: always
